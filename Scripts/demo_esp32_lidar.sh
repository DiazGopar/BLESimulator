#!/bin/bash

# Demo script para dispositivo LIDAR ESP32 BLE
# Este script simula exactamente el comportamiento del ESP32 con LIDAR

echo "üéØ BLE Simulator - ESP32 LIDAR Device Demo"
echo "=========================================="
echo ""
echo "üì° DISPOSITIVO A SIMULAR:"
echo "   ‚Ä¢ Nombre: SME_LIDAR"
echo "   ‚Ä¢ Tipo: ESP32 con sensor LIDAR"
echo "   ‚Ä¢ Servicios: UART + Battery"
echo "   ‚Ä¢ Protocolo: Frame-based con headers 0x59 0x59"
echo ""
echo "üîß CARACTER√çSTICAS BLE:"
echo "   ‚Ä¢ UART Service: 6E400001-B5A3-F393-E0A9-E50E24DCCA9E"
echo "   ‚Ä¢ TX (LIDAR Data): 6E400003-B5A3-F393-E0A9-E50E24DCCA9E"
echo "   ‚Ä¢ RX (Commands): 6E400002-B5A3-F393-E0A9-E50E24DCCA9E"
echo "   ‚Ä¢ Battery Level: 00002A19-0000-1000-8000-00805F9B34FB"
echo ""
echo "üìä DATOS QUE RECIBIR√ÅS:"
echo "   ‚Ä¢ EXACTAMENTE 40 bytes por transmisi√≥n LIDAR"
echo "   ‚Ä¢ 20 mediciones de distancia (2 bytes c/u, little-endian)"
echo "   ‚Ä¢ Frecuencia: Cada 200ms (5 Hz, como el ESP32 real)"
echo "   ‚Ä¢ Datos binarios (no JSON) para mediciones LIDAR"
echo "   ‚Ä¢ Bater√≠a: Solo cuando cambia o cada hora"
echo "   ‚Ä¢ Comandos: TRANSMIT_ON/TRANSMIT_OFF"
echo ""

# Verificar si la app est√° compilada
if [ ! -f "../.build/debug/BLESimulator" ]; then
    echo "‚ö†Ô∏è  Compilando la aplicaci√≥n..."
    cd .. && swift build
    if [ $? -ne 0 ]; then
        echo "‚ùå Error en la compilaci√≥n"
        exit 1
    fi
    echo "‚úÖ Compilaci√≥n exitosa"
    echo ""
    cd Scripts
fi

echo "üöÄ INICIANDO SIMULACI√ìN ESP32 LIDAR..."
echo ""
echo "üí° C√ìMO PROBAR:"
echo "   1. Abre un esc√°ner BLE (LightBlue, nRF Connect, etc.)"
echo "   2. Busca 'SME_LIDAR' o el Service UUID"
echo "   3. Conecta al dispositivo"
echo "   4. Suscr√≠bete a la caracter√≠stica TX para recibir datos LIDAR"
echo "   5. Escribe 'TRANSMIT_ON' en la caracter√≠stica RX para activar"
echo "   6. Escribe 'TRANSMIT_OFF' para detener la transmisi√≥n"
echo "   7. Lee la caracter√≠stica Battery Level para ver el estado"
echo ""
echo "üì± DATOS ESPERADOS:"
echo "   ‚Ä¢ Frecuencia: 5Hz (cada 200ms) - CORREGIDO"
echo "   ‚Ä¢ Formato: 40 bytes binarios (no JSON)"
echo "   ‚Ä¢ Contenido: 20 distancias √ó 2 bytes little-endian"
echo "   ‚Ä¢ Ejemplo: E2 04 AC 04 28 05... (40 bytes total)"
echo "   ‚Ä¢ Bater√≠a: Solo actualiza cuando cambia o cada hora"
echo ""

# Cambiar al directorio ra√≠z del proyecto
cd "$(dirname "$0")/.."

# Ejecutar la aplicaci√≥n con la configuraci√≥n del ESP32
echo "üéØ Cargando configuraci√≥n ESP32 LIDAR..."
./.build/debug/BLESimulator ConfigurationExamples/esp32_lidar_device.json

echo ""
echo "üìã DESPU√âS DE LA PRUEBA:"
echo "   ‚Ä¢ ¬øPudiste conectarte al dispositivo SME_LIDAR?"
echo "   ‚Ä¢ ¬øRecibiste datos de distancia realistas?"
echo "   ‚Ä¢ ¬øFuncionaron los comandos TRANSMIT_ON/OFF?"
echo "   ‚Ä¢ ¬øSe actualiz√≥ correctamente el nivel de bater√≠a?"
echo ""
echo "üîß PERSONALIZACI√ìN:"
echo "   ‚Ä¢ Edita ConfigurationExamples/esp32_lidar_device.json"
echo "   ‚Ä¢ Cambia las distancias, intervalos o UUIDs"
echo "   ‚Ä¢ Modifica los comandos disponibles"
echo "   ‚Ä¢ Ajusta la simulaci√≥n de bater√≠a"
